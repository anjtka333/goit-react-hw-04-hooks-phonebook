{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactList/ContactList.module.scss"],"names":["module","exports","ContactForm","state","name","number","nameInputId","v4","phoneInputId","handleInputChange","e","setState","currentTarget","value","handleOnSubmit","preventDefault","props","onSubmit","reset","this","className","s","container","htmlFor","type","pattern","title","required","onChange","id","input","btn","Component","ContactList","contactsFiltered","onClick","filteredList","ulStyle","map","item","Filter","inputStyle","App","useState","contacts","setContacts","filter","setFilter","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","text","console","log","toLowerCase","split","join","some","alert","contact","prevContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.326ccf04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__23jmc\",\"container\":\"ContactForm_container__3JYhr\",\"btn\":\"ContactForm_btn__117z9\"};","import React, { Component } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport s from \"./ContactForm.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameInputId = v4();\r\n  phoneInputId = v4();\r\n\r\n  reset() {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleOnSubmit} className={s.container}>\r\n        <label htmlFor={this.nameInputId}>Name </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={this.state.name}\r\n          onChange={this.handleInputChange}\r\n          id={this.nameInputId}\r\n          className={s.input}\r\n        />\r\n        <label htmlFor={this.phoneInputId}>Number </label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={this.state.number}\r\n          onChange={this.handleInputChange}\r\n          id={this.phoneInputId}\r\n          className={s.input}\r\n        />\r\n        <button className={s.btn} type=\"submit\">\r\n          Add conttact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import s from \"./ContactList.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contactsFiltered, onClick }) => {\r\n  const filteredList = contactsFiltered();\r\n  return (\r\n    <ul className={s.ulStyle}>\r\n      {filteredList.map((item) => {\r\n        const delItem = () => onClick(item.id);\r\n        return (\r\n          <li key={item.id}>\r\n            {item.name} {item.number}\r\n            <button\r\n              className={s.btn}\r\n              type=\"button\"\r\n              name={item.id}\r\n              onClick={delItem}\r\n            >\r\n              Del\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactsFiltered: PropTypes.func,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange, inputStyle }) => {\r\n  return (\r\n    <label>\r\n      Find contact by name\r\n      <input\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={inputStyle}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from \"react\";\nimport { v4 as uuidv4, v4 } from \"uuid\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport s from \"./components/ContactForm/ContactForm.module.scss\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  const addContact = (text) => {\n    const { name, number } = text;\n    console.log(name.toLowerCase().split(\" \").join(\"\"));\n    if (\n      contacts.some((item) => {\n        return item.name.toLowerCase() === name.toLowerCase();\n      })\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const contact = {\n      id: v4(),\n      name: name,\n      number: number,\n    };\n\n    setContacts((prevContacts) => [contact, ...prevContacts]);\n  };\n\n  const handleFilterChange = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const filteredContacts = () => {\n    console.log(contacts);\n    return contacts.filter((contact) => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  };\n\n  const delateItem = (id) => {\n    return setContacts((prevContacts) =>\n      prevContacts.filter((item) => item.id !== id)\n    );\n  };\n\n  useEffect(() => {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    contacts && setContacts(contacts);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter\n        value={filter}\n        onChange={handleFilterChange}\n        inputStyle={s.input}\n      />\n      <ContactList contactsFiltered={filteredContacts} onClick={delateItem} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__3-San\",\"ulStyle\":\"ContactList_ulStyle__3X4Mb\"};"],"sourceRoot":""}